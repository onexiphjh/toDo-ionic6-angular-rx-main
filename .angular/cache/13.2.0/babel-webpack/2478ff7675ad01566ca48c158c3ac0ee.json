{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"../todo.service\";\n\nfunction AddNewTaskPage_ion_chip_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-chip\", 17);\n    i0.ɵɵlistener(\"click\", function AddNewTaskPage_ion_chip_31_Template_ion_chip_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.selectCategory(i_r2);\n    });\n    i0.ɵɵelementStart(1, \"ion-label\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tag_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tag_r1);\n  }\n}\n\nexport let AddNewTaskPage = /*#__PURE__*/(() => {\n  class AddNewTaskPage {\n    constructor(modalCtlr, todoService) {\n      this.modalCtlr = modalCtlr;\n      this.todoService = todoService;\n      this.categories = [];\n      this.newTaskObj = {};\n    }\n\n    ngOnInit() {\n      this.categories.push('work');\n      this.categories.push('personal');\n    }\n\n    add() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.newTaskObj = {\n          itemName: this.itemName,\n          itemDueDate: this.itemDueDate,\n          itemPriority: this.itemPriority,\n          itemCategory: this.categorySelectedCategory\n        };\n        console.log(this.newTaskObj);\n        let uid = this.itemName + this.itemDueDate;\n\n        if (uid) {\n          yield this.todoService.addTask(uid, this.newTaskObj);\n        } else {\n          console.log(\"can't save empty task\");\n        }\n\n        this.dismis();\n      });\n    }\n\n    selectCategory(index) {\n      this.categorySelectedCategory = this.categories[index];\n      console.log(this.categorySelectedCategory);\n    }\n\n    dismis() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.modalCtlr.dismiss(this.newTaskObj);\n      });\n    }\n\n  }\n\n  AddNewTaskPage.ɵfac = function AddNewTaskPage_Factory(t) {\n    return new (t || AddNewTaskPage)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.TodoService));\n  };\n\n  AddNewTaskPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddNewTaskPage,\n    selectors: [[\"app-add-new-task\"]],\n    decls: 39,\n    vars: 5,\n    consts: [[1, \"ion-no-border\"], [\"name\", \"close\", \"slot\", \"end\", \"size\", \"larger\", 1, \"ion-padding\", 3, \"click\"], [1, \"ion-align-self-center\"], [\"placeholder\", \"Write task here\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"low\"], [\"value\", \"middle\"], [\"value\", \"high\", \"selected\", \"\"], [\"name\", \"calendar-outline\", \"slot\", \"start\"], [\"displayFormat\", \"D MMM YYYY H:mm\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"pricetag-outline\", \"slot\", \"start\"], [\"color\", \"secondary\", \"outline\", \"true\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"color\", \"primary\", \"outline\", \"true\"], [\"color\", \"secondary\"], [\"fill\", \"clear\"], [\"slot\", \"icon-only\", \"name\", \"add-outline\"], [\"expand\", \"block\", 1, \"ion-margin\", 3, \"click\"], [\"color\", \"secondary\", \"outline\", \"true\", 3, \"click\"]],\n    template: function AddNewTaskPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0);\n        i0.ɵɵelementStart(1, \"ion-toolbar\");\n        i0.ɵɵelementStart(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Add new task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-icon\", 1);\n        i0.ɵɵlistener(\"click\", function AddNewTaskPage_Template_ion_icon_click_4_listener() {\n          return ctx.dismis();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ion-content\");\n        i0.ɵɵelementStart(6, \"ion-card\", 2);\n        i0.ɵɵelementStart(7, \"ion-item\");\n        i0.ɵɵelementStart(8, \"ion-textarea\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function AddNewTaskPage_Template_ion_textarea_ngModelChange_8_listener($event) {\n          return ctx.itemName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"ion-item\");\n        i0.ɵɵelementStart(10, \"ion-label\");\n        i0.ɵɵtext(11, \"Priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ion-select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AddNewTaskPage_Template_ion_select_ngModelChange_12_listener($event) {\n          return ctx.itemPriority = $event;\n        });\n        i0.ɵɵelementStart(13, \"ion-select-option\", 5);\n        i0.ɵɵtext(14, \"Low\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"ion-select-option\", 6);\n        i0.ɵɵtext(16, \"Middle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"ion-select-option\", 7);\n        i0.ɵɵtext(18, \"High\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"ion-item\");\n        i0.ɵɵelement(20, \"ion-icon\", 8);\n        i0.ɵɵelementStart(21, \"ion-label\");\n        i0.ɵɵtext(22, \"Due Date \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"ion-datetime\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function AddNewTaskPage_Template_ion_datetime_ngModelChange_23_listener($event) {\n          return ctx.itemDueDate = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"ion-item\");\n        i0.ɵɵelement(25, \"ion-icon\", 10);\n        i0.ɵɵelementStart(26, \"ion-label\");\n        i0.ɵɵtext(27, \" Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"span\");\n        i0.ɵɵtext(29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"ion-item\");\n        i0.ɵɵtemplate(31, AddNewTaskPage_ion_chip_31_Template, 3, 1, \"ion-chip\", 11);\n        i0.ɵɵelementStart(32, \"ion-chip\", 12);\n        i0.ɵɵelementStart(33, \"ion-label\", 13);\n        i0.ɵɵtext(34, \"new\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"ion-button\", 14);\n        i0.ɵɵelement(36, \"ion-icon\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"ion-button\", 16);\n        i0.ɵɵlistener(\"click\", function AddNewTaskPage_Template_ion_button_click_37_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵtext(38, \"Add Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.itemName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.itemPriority);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.itemDueDate);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.categorySelectedCategory);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      }\n    },\n    styles: [\"\"]\n  });\n  return AddNewTaskPage;\n})();","map":null,"metadata":{},"sourceType":"module"}