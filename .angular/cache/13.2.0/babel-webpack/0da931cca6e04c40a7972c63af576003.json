{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { AddNewTaskPage } from \"../add-new-task/add-new-task.page\";\nimport { UpdateTaskPage } from \"../update-task/update-task.page\";\nimport { debounceTime } from \"rxjs/operators\";\nlet HomePage = class HomePage {\n  // TODO : https://jsmobiledev.com/article/searchbar-firebase/\n  //public foodList$: Observable<FoodItem[]>;\n  constructor(modalCtlr, todoService) {\n    this.modalCtlr = modalCtlr;\n    this.todoService = todoService;\n    this.searchTerm = \"\";\n    this.todoList = [];\n    this.today = Date.now();\n    this.searching = false;\n    this.searchControl = new FormControl(); //    this.getAllTask()\n  }\n\n  ionViewDidLoad() {\n    this.setFilteredItems(\"\");\n    this.searchControl.valueChanges.pipe(debounceTime(700)).subscribe(search => {\n      this.setFilteredItems(search);\n    });\n  }\n\n  onSearchInput() {\n    this.searching = true;\n  }\n\n  setFilteredItems(searchTerm) {\n    this.todoList = this.todoService.filterItems(searchTerm);\n  }\n\n  addNewItem() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const modal = this.modalCtlr.create({\n        component: AddNewTaskPage\n      });\n      (yield modal).onDidDismiss().then(newTask => {\n        this.getAllTask();\n      });\n      return (yield modal).present();\n    });\n  }\n\n  getAllTask() {\n    this.todoList = this.todoService.getAllTasks();\n    console.log(this.todoService.getAllTasks());\n  }\n\n  getDateFilter(noOfDays) {\n    console.log(\"DateFactor\" + noOfDays);\n    var dt = new Date(Date.now());\n    dt.setTime(dt.getTime() + noOfDays * (1000 * 60 * 60 * 24));\n    this.todoList = this.todoService.getDateFilter(dt);\n  } //TODO\n\n\n  getSearchFilter(searchString) {\n    this.todoList = this.todoService.getSearchFilter(searchString); // console.log(this.todoService.getAllTasks());\n  }\n\n  delete(key) {\n    this.todoService.deleteTask(key);\n    this.getAllTask();\n  }\n\n  update(selectedTask) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const modal = yield this.modalCtlr.create({\n        component: UpdateTaskPage,\n        componentProps: {\n          task: selectedTask\n        }\n      });\n      modal.onDidDismiss().then(() => {\n        this.getAllTask();\n      });\n      return modal.present();\n    });\n  }\n\n};\nHomePage = __decorate([Component({\n  selector: \"app-home\",\n  templateUrl: \"home.page.html\",\n  styleUrls: [\"home.page.scss\"]\n})], HomePage);\nexport { HomePage };","map":null,"metadata":{},"sourceType":"module"}